name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Start Backend Container
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/dressing_virtuel_data_collector:1.0.48
          docker run -d --name backend_container \
            -p 5005:5005 -p 5000:5000 -p 5010:5010 \
            ${{ secrets.DOCKER_USERNAME }}/dressing_virtuel_data_collector:1.0.48
          sleep 10  # Wait for the backend to be fully up

      - name: Pass secrets as environment variables
        run: |
          mkdir -p config/
          cd config/
          echo "IMAGE_TMP_DIR=${{ secrets.IMAGE_TMP_DIR }}" >> .env
          echo "IMAGE_STORAGE_DIR=${{ secrets.IMAGE_STORAGE_DIR }}" >> .env
          echo "PG_DB_HOST=postgres" >> .env
          echo "PG_DB_USER=${{ secrets.PG_DB_USER }}" >> .env
          echo "PG_DB_PORT=${{ secrets.PG_DB_PORT }}" >> .env
          echo "PG_DB_NAME=${{ secrets.PG_DB_NAME }}" >> .env
          echo "PG_DB_PASSWORD=${{ secrets.PG_DB_PASSWORD }}" >> .env
          echo "PG_API_ENDPONT=${{ secrets.PG_API_ENDPONT }}" >> .env
          echo "PG_API_SERVER=localhost" >> .env
          echo "PG_API_PORT=${{ secrets.PG_API_PORT }}" >> .env
          echo "PG_API_KEY=${{ secrets.PG_API_KEY }}" >> .env
          echo "CELERY_API_ENDPONT=${{ secrets.CELERY_API_ENDPONT }}" >> .env
          echo "CELERY_API_SERVER=localhost" >> .env
          echo "CELERY_API_PORT=${{ secrets.CELERY_API_PORT }}" >> .env
          echo "CELERY_API_KEY=${{ secrets.CELERY_API_KEY }}" >> .env
          cat .env
          cd ..

      - name: Build and Start Frontend
        run: |
          VERSION=1.0.${{ github.run_number }}
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/dressing_virtuel_django:$VERSION"
          IMAGE_NAME_LAST="${{ secrets.DOCKER_USERNAME }}/dressing_virtuel_django:latest"
          echo ---Building docker image---
          docker build -t $IMAGE_NAME -t $IMAGE_NAME_LAST .
          echo ---Starting up docker---
          docker compose -f docker-compose.yml up -d
          sleep 10  # Wait for services to start
          docker ps -a

      - name: Run Django Tests
        run: |
          echo ---Running test cases---
          docker compose exec -T vrituel_dressing_frontend python manage.py test --noinput
          echo ---Completed test cases---

      - name: Push Docker image to Docker Hub
        run: |
          VERSION=1.0.${{ github.run_number }}
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/dressing_virtuel_django:$VERSION"
          echo ---Pushing Docker image---
          docker push $IMAGE_NAME
